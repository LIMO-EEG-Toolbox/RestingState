[STUDY, ALLEEG] = pop_importbids(pwd, 'subjects', [1:2],'bidstask','eyesclosed')
ALLEEG = pop_select( ALLEEG,'nochannel',{'EXG1','EXG2','EXG3','EXG4','EXG5','EXG6','EXG7','EXG8', 'GSR1', 'GSR2', 'Erg1', 'Erg2', 'Resp', 'Plet', 'Temp'});
ALLEEG = pop_reref( ALLEEG,[]);
ALLEEG = pop_clean_rawdata( ALLEEG,'FlatlineCriterion',5,'ChannelCriterion',0.87, ...
    'LineNoiseCriterion',4,'Highpass',[0.25 0.75] ,'BurstCriterion',20, ...
    'WindowCriterion',0.25,'BurstRejection','on','Distance','Euclidian', ...
    'WindowCriterionTolerances',[-Inf 7] ,'fusechanrej',1);
ALLEEG = pop_reref( ALLEEG,[],'interpchan',[]);
plugin_askinstall('picard', 'picard', 1); % install Picard plugin
ALLEEG = pop_runica(ALLEEG, 'icatype','picard','concatcond','on','options',{'pca',-1});
ALLEEG = pop_iclabel(ALLEEG, 'default');
ALLEEG = pop_icflag( ALLEEG,[NaN NaN;0.9 1;0.9 1;NaN NaN;NaN NaN;NaN NaN;NaN NaN]);
figure; topoplot([],EEG.chanlocs, 'style', 'blank',  'electrodes', 'labelpoint', 'chaninfo', EEG.chaninfo);
EEG = pop_epoch( EEG, {  }, [-1  2], 'epochinfo', 'yes');
EEG = eeg_checkset( EEG );
EEG = pop_rmbase( EEG, [-1000 1998] ,[]);
EEG = eeg_checkset( EEG );
figure; pop_spectopo(EEG, 1, [-1000  1998], 'EEG' , 'freq', [6 10 22], 'freqrange',[2 25],'electrodes','off');
figure; pop_spectopo(EEG, 1, [-1000  1998], 'EEG' , 'freq', [2 10 22], 'freqrange',[5 60],'electrodes','off');
EEG = pop_saveset( EEG, 'filename','eyesclosed_eeg.set','filepath','C:\\Users\\yaron\\Downloads\\');
EEG = eeg_checkset( EEG );'
